// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: query.sql

package usersdb

import (
	"context"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO users (id)
VALUES (?)
`

func (q *Queries) CreateUser(ctx context.Context, id string) error {
	_, err := q.db.ExecContext(ctx, createUser, id)
	return err
}

const getUser = `-- name: GetUser :one
SELECT id FROM users
WHERE id = ? LIMIT 1
`

func (q *Queries) GetUser(ctx context.Context, id string) (string, error) {
	row := q.db.QueryRowContext(ctx, getUser, id)
	err := row.Scan(&id)
	return id, err
}
